=begin
  Suggestions and contributions are welcome: https://github.com/rpherbig/dr-scripts

  This script sell gems (from your pouch), sells your worn bundle, and then deposits your money. It is intended to be used in The Crossing (https://elanthipedia.play.net/mediawiki/index.php/RanikMap1).

  Optional arguments are a number and a coin type keep on hand. The default is 3 silver: the maximum amount that cannot be stolen by a Thief.
  * ;sell-loot # Uses the default: keeps 3 silver
  * ;sell-loot 12 # Uses one argument: keeps 12 silver, which is withdrawn as 1 gold and 2 silver
  * ;sell-loot 4 g # Uses two arguments: keeps 4 gold
=end

custom_require(%w(common drinfomon))

class SellLoot
  include DRC

  def main
    keep_amount, keep_type = setup(variable)

    sell_gems('pouch')

    sell_bundle

    withdrawals = convert_input(keep_amount, keep_type)
    deposit_coins(withdrawals)
  end

  def setup(variable)
    keep_amount = variable[1] || 3
    keep_type = variable[2] || 'silver'

    empty_hands

    [keep_amount, keep_type]
  end

  def convert_input(keep_amount, keep_type)
    copper = convert_to_copper(keep_amount, keep_type)
    minimize_coins(copper)
  end

  def deposit_coins(withdrawals)
    walk_to 1902
    fput 'exchange all lir for kro'
    fput 'exchange all dok for kro'

    walk_to 1900
    fput 'deposit all'
    withdrawals.each { |amount| fput "withdraw #{amount}" }
    fput 'check balance'
  end

  def sell_bundle
    skins = get_skins('bundle')
    return if skins.count <= 1

    walk_to 8266

    skin = skins.first
    fput "get my #{skin} from bundle"
    fput 'remove my bundle'
    fput 'sell my bundle'
    fput "bundle my #{skin}"
    fput 'wear my bundle'
  end

  def sell_gems(container)
    result = bput("open my #{container}", 'You open your', 'has been tied off', 'What were you referring to', 'That is already open')
    return if result == 'has been tied off'
    return if result == 'What were you referring to'

    gems = get_gems(container)

    if gems.count > 0
      walk_to 4652

      gems.each do |gem|
        fput "get my #{gem}"
        fput "sell my #{gem} to appraiser"
      end
    end

    fput "close my #{container}"
  end
end

# Call this last to avoid the need for forward declarations
SellLoot.new.main
